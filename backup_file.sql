--
-- PostgreSQL database dump
--

-- Dumped from database version 16.6 (Ubuntu 16.6-0ubuntu0.24.04.1)
-- Dumped by pg_dump version 16.6 (Ubuntu 16.6-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO postgres;

--
-- Name: contact; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact (
    full_name text,
    email text,
    phone text,
    subject text,
    message text,
    id uuid NOT NULL,
    created_at timestamp without time zone NOT NULL
);


ALTER TABLE public.contact OWNER TO postgres;

--
-- Name: feedback; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.feedback (
    id uuid NOT NULL,
    rating integer,
    comments text,
    frequency_of_use text,
    purpose_of_use text,
    ease_of_use text,
    specific_features text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.feedback OWNER TO postgres;

--
-- Name: multiple_choice_question; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.multiple_choice_question (
    question text NOT NULL,
    option_1 text NOT NULL,
    option_2 text NOT NULL,
    option_3 text NOT NULL,
    option_4 text NOT NULL,
    correct_answer text NOT NULL,
    id uuid NOT NULL,
    created_at timestamp without time zone NOT NULL,
    difficulty_level text,
    question_level character varying DEFAULT 'default_level'::character varying NOT NULL
);


ALTER TABLE public.multiple_choice_question OWNER TO postgres;

--
-- Name: problem_solving_questions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.problem_solving_questions (
    problem_description text NOT NULL,
    input_format text NOT NULL,
    output_format text NOT NULL,
    constraints text,
    examples json,
    edge_cases json,
    id uuid NOT NULL,
    created_at timestamp without time zone NOT NULL,
    difficulty_level text
);


ALTER TABLE public.problem_solving_questions OWNER TO postgres;

--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.alembic_version (version_num) FROM stdin;
c63598a25b33
\.


--
-- Data for Name: contact; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contact (full_name, email, phone, subject, message, id, created_at) FROM stdin;
\.


--
-- Data for Name: feedback; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.feedback (id, rating, comments, frequency_of_use, purpose_of_use, ease_of_use, specific_features, created_at) FROM stdin;
28b1d649-949b-4657-87dd-e31c0c862676	5	Best app I've used in a while!	Weekly	Study	Very Easy	Notes	2025-01-11 12:54:28.389256
71fd6e97-eeb2-42dc-ba96-01a8510d8a6c	5	dsvsd	daily	dcvffd	very_easy	\N	2025-01-11 12:55:02.967696
2d907282-ddb3-45cd-8702-f53c5d9fc122	5		daily		very_easy	\N	2025-01-11 12:59:26.286308
97a50e24-c3e9-4c9d-bc6d-4ebcb52a5053	4	vcdsv	daily		very_easy	\N	2025-01-11 13:12:00.128122
cdaf7935-ffca-41ee-801c-a00700106ded	5	Amazing product.	daily		very_easy	\N	2025-01-11 13:35:51.927699
05f3f010-a592-4a91-9138-a9cb242f14e8	5	dcvs	daily		very_easy	\N	2025-01-11 14:33:59.789238
8021208e-d45d-4c91-9e02-56aee9f04638	1	sdds	daily		very_easy	\N	2025-01-11 15:56:43.382358
f3eea498-e17d-4252-942e-28ef2a42bcda	4	csacascas	daily	cadsc	neutral	\N	2025-01-13 13:24:47.791216
d9f733b9-addb-495a-997c-1ceb03e512eb	5	svdsvds	daily		very_easy	\N	2025-01-13 13:36:41.617026
342723f0-ff59-4fd3-86cd-92cf7c22944d	5	dsvdsv	daily		very_easy	\N	2025-01-13 14:11:28.448267
604bfecd-3ace-46b7-a105-031a84f951a4	5	This is very amazing product I have seen so far.	daily		very_easy	\N	2025-01-13 14:13:18.484162
de8eb1e6-e6d9-4661-853d-ef5ce1b01876	5	sadcasd	daily		very_easy	\N	2025-01-14 12:36:32.673415
32751bd5-457e-47c5-a282-6ef4b73f192a	5	dsvc	daily		very_easy	\N	2025-01-14 12:37:44.35092
5c60fbda-a20d-40c4-b61c-b51270d12d31	5	fdfd	daily		very_easy	\N	2025-01-14 12:38:25.898265
0cd7898a-2d5f-4f11-b94f-5667f1f34808	5	vcdsvds	daily		very_easy	\N	2025-01-15 17:51:00.113485
d66622e3-b288-4f18-965b-12c925334db3	5	vcdsa	daily		very_easy	\N	2025-01-15 20:39:19.105866
ed92f21d-80aa-46f5-af67-35f55cf36033	5	cdsc	daily		very_easy	\N	2025-01-15 20:41:45.196402
f747a0d8-b9b4-40fd-8956-aa899a1f501b	5	vdsvsd	daily		very_easy	\N	2025-01-15 20:45:17.180711
58ec9e63-2d86-496f-ab92-bfaa554fc1bf	5	gnfgngf	daily		very_easy	\N	2025-01-15 21:03:47.617235
c34cc6b1-daa9-4fc5-82e0-cfef0c686e4d	5	This feedback is taken forcefuly 	daily		very_easy	\N	2025-01-18 00:12:38.417834
240fb394-a00c-47ed-8718-5b3ab17a1762	5	This is amazing	daily		very_easy	\N	2025-01-21 17:20:44.713842
29bf554d-df9f-4944-85f9-0a6aab0adbad	5	dvsd	daily		very_easy	\N	2025-01-21 17:58:59.210468
2737b166-c144-4644-8554-de197179820a	5	gfgd	daily		very_easy	\N	2025-01-21 18:37:22.361657
e62e3276-e183-4f25-b31e-544dd67d70c3	5	cdsa	daily		very_easy	\N	2025-01-21 18:37:51.980895
3ac77b5b-7279-476c-90bb-9800978179f9	5	This is valuable product.\r\nWaiting for it's stable version.	daily		very_easy	\N	2025-01-21 19:28:16.656175
6fe18936-68cb-4798-babc-6a1a01d52842	5	dv sdvds	daily		very_easy	\N	2025-01-21 19:41:47.016391
6c7b274d-e718-45f3-9100-11e41b874a10	5	dsvds	daily		very_easy	\N	2025-01-21 19:53:23.394084
45fe9a94-4f38-4945-9ea0-4bf6aed660b8	5	dcvsd\r\n	daily		very_easy	\N	2025-01-21 20:12:45.966987
8ec15248-aaf9-45e7-a609-bae74709dfa6	5	The UI is fantastic	daily		very_easy	\N	2025-01-24 11:56:23.102358
\.


--
-- Data for Name: multiple_choice_question; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.multiple_choice_question (question, option_1, option_2, option_3, option_4, correct_answer, id, created_at, difficulty_level, question_level) FROM stdin;
Which of the following functions is used to get the length of a string in Python?	size()	count()	length()	len()	option_4	8b9dabd0-f497-40da-a4de-a8428f9d2d2f	2024-12-29 16:57:16.937195	\N	default_level
What will be the output of the following code?\nprint('Hello'.lower())	hello	HELLO	Hello	Error	option_1	54a262c6-aaed-450b-9b4d-3fcc860c9392	2024-12-29 17:02:21.589734	\N	default_level
Which of the following is a valid variable name in Python?	1variable	variable_1	variable-1	variable.1	option_2	55bc2878-f6e3-4f79-9b65-fb96cec85736	2024-12-29 17:11:00.172615	\N	default_level
What is the output of the following code?\nprint(type(10))	<class 'float'>	<class 'int'>	<class 'str'>	<class 'bool'>	option_2	f35048aa-531d-4076-8403-7bc8103e2ee2	2024-12-29 17:11:00.178095	\N	default_level
Which of the following data types is immutable in Python?	List	Set	Dictionary	Tuple	option_4	ca9e048a-ca18-4c51-aa1b-d1cca2c85d76	2024-12-29 17:11:00.183362	\N	default_level
What is the correct syntax to create a dictionary in Python?	d = [1, 2, 3]	d = (1, 2, 3)	d = {1: 'a', 2: 'b'}	d = [1: 'a', 2: 'b']	option_3	de79eda3-7ac1-4d8a-af06-d9327be8024c	2024-12-29 17:11:00.186317	\N	default_level
Which operator is used to divide two numbers in Python?	/	//	%	*	option_1	138f9021-5d58-42de-9ac4-ba266780acdb	2024-12-29 17:11:00.192809	\N	default_level
Which of the following is used to create an empty list in Python?	list()	[]	{}	empty()	option_2	100d2d6a-6fc5-48b7-841b-058ae4f5ab30	2024-12-29 17:11:00.19721	\N	default_level
Which of the following methods is used to add an element at the end of a list?	add()	insert()	append()	extend()	option_3	c8728f2a-4aea-41ea-b1f5-1a5568e85695	2024-12-29 17:11:00.200189	\N	default_level
What does the 'len()' function do in Python?	Finds the length of a list	Finds the length of a string	Both of the above	None of the above	option_3	76b83248-676b-4107-aed0-b4ebca18007c	2024-12-29 17:11:00.202705	\N	default_level
Which of the following is used for looping through a sequence in Python?	for loop	while loop	do-while loop	loop	option_1	e417bdf2-850b-475a-a31b-8a0a9080f7b8	2024-12-29 17:11:00.205244	\N	default_level
What is the output of the following code?\nprint('Python' == 'python')	True	False	Error	None	option_2	bfa4be19-82bf-45ca-ab6a-8491e1df8769	2024-12-29 17:11:00.208041	\N	default_level
What is the result of the expression 10 % 3 in Python?	1	3	0	2	option_4	d946c94b-03df-4d1e-a197-601a383a6166	2024-12-29 17:11:00.211695	\N	default_level
Which of the following methods is used to remove an item from a list by index?	remove()	pop()	del()	clear()	option_2	58d2c250-c240-478f-874b-0156c4b229ac	2024-12-29 17:11:00.214615	\N	default_level
What will be the output of the following code?\nprint(2**3)	6	8	9	Error	option_2	86bda332-e9b0-437a-b4aa-c2731e8f3ebf	2024-12-29 17:11:00.217407	\N	default_level
What is the default value of a tuple in Python?	[]	()	{}	None	option_2	e2777fbf-a41e-4a7d-8c40-5330a07fa779	2024-12-29 17:11:00.220112	\N	default_level
How do you start a comment in Python?	//	#	/*	--	option_2	04dad668-0c74-436b-bb21-6b4977b2a52f	2024-12-29 17:11:00.222758	\N	default_level
Which of the following is the correct syntax to import a module in Python?	import module_name	import(module_name)	from module_name import *	import module_name()	option_1	d04e0a34-a182-4c8a-8a41-6977096164df	2024-12-29 17:11:00.225204	\N	default_level
Which of the following is used to declare a function in Python?	def	function	func	declare	option_1	0c47b8d0-c42b-4734-83f8-58e599355818	2024-12-29 17:11:00.228413	\N	default_level
Which built-in Python module is used to work with regular expressions?	regex	re	regexpr	re.regex	option_2	2f1aaa99-b53d-4e84-a088-e782e83a4813	2024-12-29 17:11:00.231202	\N	default_level
How can you check if a string contains a specific substring in Python?	'substring' in string	substring('string')	string.includes('substring')	substring.contains(string)	option_1	465b52c8-9863-4a49-9bc9-b1c8855e5f0a	2024-12-29 17:11:00.233803	\N	default_level
Which of the following is used to concatenate two strings in Python?	+	&	*	|	option_1	9bdd8a47-5fd6-49b5-8c5d-708a3a1cc09f	2024-12-29 17:11:00.236297	\N	default_level
What is the output of the following code?\nnums = [1, 2, 3, 4]\nnums[2:4] = [5, 6, 7]\nprint(nums)	[1, 2, 5, 6, 7]	[1, 2, 5, 6]	[1, 2, 3, 4, 5, 6, 7]	[1, 2, 5, 6, 7, 4]	option_1	a1905b5f-044b-477a-8ddb-cb3e4a6f9b7b	2024-12-29 17:11:00.2388	\N	default_level
What will be the output of the following code?\na = {1, 2, 3}\nb = {3, 4, 5}\nprint(a & b)	{3}	{1, 2, 3, 4, 5}	{1, 2}	Error	option_1	4d570146-739e-49fb-82a7-93c5494d8112	2024-12-29 17:11:00.241329	\N	default_level
Which of the following is the correct way to raise a custom exception in Python?	raise Exception()	throw Exception()	raise CustomError()	throw CustomError()	option_1	19845fd8-f8b2-4e04-b58e-d5345e303b1d	2024-12-29 17:11:00.244662	\N	default_level
What is the output of the following code?\nx = [1, 2, 3]\ny = x\nx.append(4)\nprint(y)	[1, 2, 3, 4]	[1, 2, 3]	Error	[4]	option_1	e91d8e7d-0246-4e5f-8f85-e518a310fb72	2024-12-29 17:11:00.247464	\N	default_level
Which of the following will create a generator in Python?	my_gen = (x for x in range(5))	my_gen = [x for x in range(5)]	my_gen = {x for x in range(5)}	my_gen = list(range(5))	option_1	eb40babe-3ad3-488c-a4c9-1d230dc00b6d	2024-12-29 17:11:00.250128	\N	default_level
What is the result of the following code?\nprint(5 / 2)	2	2.5	3	Error	option_2	604fbf57-8491-4651-bb0f-b9d804da476e	2024-12-29 17:14:26.220966	\N	default_level
Which of the following data types is mutable in Python?	Tuple	String	List	Integer	option_3	a7ac53c0-4979-48fc-beff-6c74969f5696	2024-12-29 17:14:26.224893	\N	default_level
Which of the following methods is used to remove all elements from a list in Python?	clear()	pop()	remove()	del()	option_1	c484fb79-d2d0-4d67-bece-f53ea7079329	2024-12-29 17:14:26.227309	\N	default_level
How do you comment multiple lines in Python?	# Comment line 1\n# Comment line 2	/* Comment line 1\nComment line 2 */	' Comment line 1\nComment line 2	''' Comment line 1\nComment line 2 '''	option_4	1185fffd-dbc8-4e69-96ef-e07a770a1e38	2024-12-29 17:14:26.229648	\N	default_level
What does the 'continue' statement do in a loop?	Terminates the loop	Skips the rest of the current iteration	Exits the function	Ends the program	option_2	9b1c5fbb-5dad-47a1-956e-851969f50c25	2024-12-29 17:14:26.232403	\N	default_level
Which operator is used to check equality in Python?	==	=	===	!=	option_1	61b479ce-44ee-4ca0-8c17-f21df9f1cd9d	2024-12-29 17:14:26.235708	\N	default_level
Which of the following statements is used to create an infinite loop?	while True:	for i in range(0, -1):	while False:	repeat()	option_1	dfbb36bb-b4a8-4bfa-85fc-a99110e557cb	2024-12-29 17:14:26.238653	\N	default_level
What is the result of the expression 3 + 4 * 2?	14	11	7	6	option_2	96569dc6-f9fc-438c-8d5c-355e0e07078d	2024-12-29 17:14:26.24131	\N	default_level
Which function is used to find the maximum value in a list?	max()	min()	sum()	sort()	option_1	91c2bbb4-ef49-400c-9955-47f8c329f431	2024-12-29 17:14:26.244072	\N	default_level
Which of the following is used to declare a constant in Python?	constant	CONST	Uppercase variable name	There is no specific keyword for constants	option_4	8596a080-9dad-4752-acb0-81a4f823670a	2024-12-29 17:14:26.247305	\N	default_level
Which function is used to accept input from the user in Python?	input()	raw_input()	scan()	get_input()	option_1	db2eb092-d25a-4e22-9e1a-536a24514599	2024-12-29 17:14:26.251715	\N	default_level
What is the output of this code?\nprint(10 // 3)	3	3.33	4	Error	option_1	fa38b3ac-19c0-4f65-8734-5ce2e224f124	2024-12-29 17:14:26.254815	\N	default_level
What does the 'break' statement do in Python?	Exits the loop immediately	Skips the rest of the current iteration	Exits the function	Raises an exception	option_1	d422ee5f-33dd-49d7-baaa-b54178b3060a	2024-12-29 17:14:26.257584	\N	default_level
Which of the following functions is used to convert a string into a list of characters?	split()	list()	join()	convert()	option_2	137a2c61-d911-456b-9507-ee9d01b1df8c	2024-12-29 17:14:26.260964	\N	default_level
Which of the following methods is used to join the elements of a list into a string?	join()	concat()	combine()	merge()	option_1	393ddf61-5576-4dd8-902d-08edd39c6737	2024-12-29 17:14:26.26379	\N	default_level
What is the output of this code?\nprint(2 ** 3)	6	8	9	Error	option_2	e705d680-6587-4238-b7f1-d47cb735c941	2024-12-29 17:14:26.266215	\N	default_level
How do you define a class in Python?	class MyClass():	MyClass = class()	class = MyClass()	def MyClass():	option_1	41f59446-34f2-44fa-ba70-7c68bc6ce7c0	2024-12-29 17:14:26.268737	\N	default_level
Which of the following is used to import all functions from a module?	import module_name	import * from module_name	from module_name import *	from module_name all import *	option_3	08768945-4d84-423e-8472-3aaeb6489b65	2024-12-29 17:14:26.270898	\N	default_level
What is the output of the following code?\nprint('abc'.upper())	ABC	abc	Abc	Error	option_1	b181f86e-2895-401c-853e-19579797abd8	2024-12-29 17:14:26.273059	\N	default_level
Which of the following functions is used to create a new empty set in Python?	set()	create()	dict()	empty()	option_1	bd0adf8b-7b07-4b65-bc95-0150700e1492	2024-12-29 17:14:26.275905	\N	default_level
What is the output of the following code?\nmy_list = [1, 2, 3]\nmy_list[1:2] = [4, 5]\nprint(my_list)	[1, 4, 5, 3]	[1, 4, 5]	[4, 5, 3]	[1, 2, 3, 4, 5]	option_1	354d16d0-70da-4a79-904a-94368dcef3d9	2024-12-29 17:14:26.278946	\N	default_level
What will be the output of the following code?\nx = [1, 2, 3]\ny = x\nx.append(4)\nprint(y)	[1, 2, 3, 4]	[1, 2, 3]	Error	[4]	option_1	f4c9ed4f-dcd7-466d-9007-779929cf6251	2024-12-29 17:14:26.28135	\N	default_level
What is the result of the following code?\nprint('abc' == 'ABC')	True	False	Error	None	option_2	e8fe8f33-6dd0-4c51-aa59-20d52e1df222	2024-12-29 17:14:26.283369	\N	default_level
What is the output of this code?\nnums = [1, 2, 3]\nnums.remove(2)\nprint(nums)	[1, 2, 3]	[1, 3]	[2, 3]	Error	option_2	511da7a8-738f-4528-8533-85056bf8a5c5	2024-12-29 17:14:26.285467	\N	default_level
What will be the output of the following code?\na = [1, 2, 3]\nb = a.copy()\na.append(4)\nprint(b)	[1, 2, 3, 4]	[1, 2, 3]	Error	[1, 2, 3, 4]	option_2	475d835d-7012-426f-aa13-9163c011f145	2024-12-29 17:55:06.508047	medium	default_level
What is the result of the following code?\nprint(3 + 2 * 2)	7	10	5	9	option_1	80a022b6-a210-42c2-9a7c-bfeb27321607	2024-12-29 17:56:34.949055	easy	default_level
In Python, explain the concept of a generator function and provide a real-world scenario where using a generator function would be beneficial.	A function that returns an iterator object	A function that generates random numbers	A function that sorts a list in descending order	A function that creates multiple threads	A function that returns an iterator object	11bc107c-d221-4cd9-81ec-3c7fce8d489b	2024-12-30 13:43:06.957066	hard	default_level
What is the difference between a generator and a coroutine in Python?	Generators can only yield values, while coroutines can both yield and receive values	Generators are used for iteration, while coroutines are used for asynchronous programming	Generators are defined using the 'yield' keyword, while coroutines use the 'async' and 'await' keywords	Generators are synchronous, while coroutines are asynchronous	Generators can only yield values, while coroutines can both yield and receive values	49f6cdb2-98b4-4be0-9d50-59b4a131248c	2024-12-30 13:48:34.838745	hard	default_level
What is the difference between a generator function and a normal function in Python?	Generator functions can only be used with the 'yield' keyword, while normal functions use 'return'	Generator functions return an iterator that generates values on-the-fly, while normal functions return a single result	Generator functions are asynchronous, while normal functions are synchronous	Generator functions are only used for mathematical calculations, while normal functions are used for general-purpose tasks	Generator functions return an iterator that generates values on-the-fly, while normal functions return a single result	89c288d9-8f71-40dc-88b3-01cb69d0d227	2024-12-30 13:50:13.121041	hard	default_level
In Python, how would you efficiently implement a priority queue using a heap data structure?	Using the heapq module	Implementing a custom heap class	Using the queue module	Using a dictionary	Using the heapq module	a7f2f983-1ba0-439b-b39b-ba0714837362	2024-12-30 14:13:50.310511	hard	default_level
In Python, explain the difference between list comprehension and generator expression?	List comprehension creates a new list, while generator expression creates a generator object	List comprehension creates a generator object, while generator expression creates a new list	List comprehension and generator expression are the same in Python	List comprehension is used for dictionaries, while generator expression is used for lists	List comprehension creates a new list, while generator expression creates a generator object	a9ce2e4f-f440-4ee7-9902-30a5c66e5abb	2025-01-04 13:07:35.451984	hard	default_level
What is the purpose of using decorators in Python, and how can they be implemented in a real-world scenario?	To add functionality to an existing function without modifying its structure; for example, logging or authentication can be implemented using decorators.	To remove functionality from a function; for example, error handling can be implemented using decorators.	To change the return type of a function; for example, converting integers to strings can be done using decorators.	To define new functions within an existing function; for example, creating helper functions can be achieved using decorators.	To add functionality to an existing function without modifying its structure; for example, logging or authentication can be implemented using decorators.	57476cd5-cec5-4558-a70d-3565f51a20f4	2025-01-04 13:12:53.888906	hard	default_level
What is the purpose of using list comprehensions in Python?	To create a new list by applying an operation to each element of an existing list	To convert a list into a tuple	To remove elements from a list based on a condition	To reverse the order of elements in a list	To create a new list by applying an operation to each element of an existing list	ec5d41f2-b6a3-4f6e-adca-44c8d52c91d4	2025-01-04 16:00:29.341163	medium	default_level
In Python, what does the 'lambda' keyword signify?	It is used to define a new class	It is used to create an anonymous function	It is used to import external libraries	It is used to handle exceptions	It is used to create an anonymous function	e251c67c-787a-4540-9876-e32a4ad63383	2025-01-04 16:00:29.349648	medium	default_level
What is the purpose of the 'zip' function in Python?	To combine two lists into a dictionary	To concatenate two strings	To iterate over two or more lists in parallel	To sort a list in descending order	To iterate over two or more lists in parallel	07721a48-e17d-4bca-b535-0d9c82f93fec	2025-01-04 16:00:29.356543	medium	default_level
How can you handle exceptions in Python?	Using the 'try-except' block	Using the 'switch-case' statement	Using the 'if-else' statement	Using the 'for' loop	Using the 'try-except' block	21793403-ddd2-48c6-8690-b539d66a29c9	2025-01-04 16:00:29.363273	medium	default_level
What is the purpose of the 'map' function in Python?	To apply a function to each element of an iterable	To filter elements based on a condition	To remove duplicates from a list	To reverse the order of elements in a list	To apply a function to each element of an iterable	482ff7a3-3d4c-4c46-a54a-778102b08a85	2025-01-04 16:00:29.369919	medium	default_level
What is the difference between 'deepcopy' and 'copy' in Python's 'copy' module?	'deepcopy' creates a new object and recursively copies the objects found in the original, while 'copy' creates a shallow copy	'deepcopy' creates a shallow copy, while 'copy' creates a deep copy	'deepcopy' is used for copying dictionaries, while 'copy' is used for copying lists	'deepcopy' is a built-in function, while 'copy' is a method of the 'copy' module	'deepcopy' creates a new object and recursively copies the objects found in the original, while 'copy' creates a shallow copy	84ee986b-acca-4153-93ab-dcb4460a7fff	2025-01-04 16:00:29.376474	medium	default_level
What is the purpose of the 'filter' function in Python?	To apply a function to each element of an iterable	To remove elements from an iterable based on a condition	To sort an iterable in ascending order	To concatenate two iterables	To remove elements from an iterable based on a condition	1cb0134a-9c99-45b7-bb5c-8ba3765efdf6	2025-01-04 16:00:29.383399	medium	default_level
How can you iterate over a dictionary in Python?	Using a 'for' loop	Using a 'while' loop	Using recursion	Using list comprehension	Using a 'for' loop	41d5371b-0967-490e-ab84-780d1dba59f0	2025-01-04 16:00:29.390075	medium	default_level
What is the purpose of the 'reduce' function in Python?	To apply a function to each element of an iterable	To combine elements of an iterable using a function	To filter elements based on a condition	To reverse the order of elements in an iterable	To combine elements of an iterable using a function	7d7029af-582d-489d-b153-ed54ab091c3a	2025-01-04 16:00:29.397272	medium	default_level
How can you sort a dictionary by its values in Python?	Using the 'sort' method	Using the 'sorted' function with a lambda function as the key	Using the 'reverse' parameter in the 'sorted' function	Using the 'sort_values' method	Using the 'sorted' function with a lambda function as the key	ed879ad4-53d8-49d0-a910-17ffcfa18f25	2025-01-04 16:00:29.403397	medium	default_level
In Python, what does the 'zip' function do?	Combines two lists into a dictionary	Merges two lists into a single list	Pairs elements from two lists into tuples	Reverses the order of elements in a list	Pairs elements from two lists into tuples	5e945e4f-aa1e-40e5-a1c5-dc5e9660f731	2025-01-04 16:00:29.413426	medium	default_level
What is the purpose of using decorators in Python?	To add metadata to functions	To remove functions from a program	To convert functions into classes	To create new functions	To add metadata to functions	697e1c4a-fcae-4680-a54e-43be53b8650b	2025-01-04 16:00:29.420046	medium	default_level
How can you convert a string to a list in Python?	Using the 'split' method	Using the 'join' method	Using the 'replace' method	Using the 'append' method	Using the 'split' method	0ba17beb-adda-413c-8ac2-1e86afcfe69a	2025-01-04 16:00:29.432635	medium	default_level
What does the 'lambda' keyword signify in Python?	It defines a new class	It creates an anonymous function	It imports external libraries	It generates random numbers	It creates an anonymous function	465ff982-80c4-4303-b451-8e09a8f9061e	2025-01-04 16:00:29.439301	medium	default_level
How can you reverse a list in Python?	Using the 'reverse' method	Using list slicing	Using the 'sort' method	Using the 'insert' method	Using list slicing	f051ac70-3529-49b9-84f2-2bc881135ed3	2025-01-04 16:00:29.445879	medium	default_level
How can you find the maximum element in a list in Python?	Using the 'max' function	Using a loop to compare elements	Using the 'find' method	Using the 'maximum' method	Using the 'max' function	9761c29b-1bcf-4f42-9c2d-c8a299333e09	2025-01-04 16:00:29.455594	medium	default_level
When would you use list comprehensions in Python?	To create a new list by applying an operation to each element of an existing list	To delete elements from a list	To sort a list in descending order	To reverse the elements of a list	To create a new list by applying an operation to each element of an existing list	d7e28d1c-a22e-4d2a-bdfd-62bea8a41b0d	2025-01-04 16:00:29.465084	medium	default_level
What is the main advantage of using OOP (Object-Oriented Programming) in software development?	Improved code reusability and modularity	Faster execution speed	Simpler debugging process	Reduced memory consumption	Improved code reusability and modularity	7536642c-7603-4210-b94f-9198c7af3528	2025-01-04 16:00:29.471477	medium	default_level
How does Python handle errors and exceptions?	By terminating the program immediately	By ignoring the errors	By raising exceptions to handle errors gracefully	By printing error messages to the console	By raising exceptions to handle errors gracefully	e6c24c0e-ce2d-401d-87c9-e5b8443c8dfe	2025-01-04 16:00:29.476596	medium	default_level
What is the purpose of using lambda functions in Python?	To define functions that can be called recursively	To create anonymous functions	To handle exceptions in a concise way	To convert data types	To create anonymous functions	07220d98-f198-48ca-a4d4-9b621099a87e	2025-01-04 16:00:29.481945	medium	default_level
In Python, what is the purpose of a class method?	To modify class attributes directly	To create instance-specific methods	To access instance attributes only	To modify instance attributes directly	To modify class attributes directly	9bd5afff-d4d1-4e02-aabf-d09e05c12304	2025-01-04 16:03:05.419325	hard	default_level
How can you create a private class variable in Python?	By using the @private decorator	By prefixing the variable name with two underscores (__)	By using the private keyword before the variable name	By enclosing the variable name in square brackets []	By prefixing the variable name with two underscores (__)	73c62b78-4a70-4c28-b943-fa25e239b018	2025-01-04 16:03:05.437061	hard	default_level
What is method overloading in Python?	Defining multiple methods with the same name but different parameters	Changing the behavior of a method at runtime	Creating methods with different return types	Defining methods with the same name and parameters	Defining multiple methods with the same name but different parameters	d544b4cd-5678-4955-8022-9dcd7151fa8f	2025-01-04 16:03:05.443933	hard	default_level
How can you achieve method overriding in Python?	By using the super() function	By creating a subclass with a method of the same name as the superclass	By using the @override decorator	By importing the method from the superclass	By creating a subclass with a method of the same name as the superclass	d75ec579-c695-46a7-9e20-f8985e8f67f9	2025-01-04 16:03:05.450402	hard	default_level
What is the purpose of the __init__ method in Python classes?	To initialize class variables	To define class methods	To access instance methods	To modify instance attributes	To initialize class variables	e395dc77-4446-44b4-875c-74e7fa55280c	2025-01-04 16:03:05.45693	hard	default_level
How can you prevent a class from being inherited in Python?	By using the final keyword before the class definition	By setting the class attribute __inherit__ to False	By using the @sealed decorator	By defining the class with all private methods	By using the @sealed decorator	81459bd6-2e2e-4a25-8f2d-d1b4dd28dffd	2025-01-04 16:03:05.463466	hard	default_level
What is the difference between class variables and instance variables in Python?	Class variables are accessible only within the class, while instance variables are accessible globally	Class variables are shared among all instances of a class, while instance variables are unique to each instance	Class variables are created using the self keyword, while instance variables are created using cls	Class variables are defined outside the class definition, while instance variables are defined inside the class methods	Class variables are shared among all instances of a class, while instance variables are unique to each instance	167fcd3a-2e97-4879-89be-a52fe0bbe72a	2025-01-04 16:03:05.470247	hard	default_level
How can you call a superclass method in Python?	By using the super() function	By importing the method from the superclass	By using the @superclass decorator	By defining the method in the subclass with the same name	By using the super() function	229e26ce-8795-470b-8374-a177c5d02e8d	2025-01-04 16:03:05.47702	hard	default_level
What is multiple inheritance in Python?	Inheriting from multiple classes at the same time	Inheriting from a single class multiple times	Inheriting from a class and an interface simultaneously	Inheriting from a superclass and a subclass	Inheriting from multiple classes at the same time	ad7133e9-8bfe-4c60-a5fc-6e6d18a15da0	2025-01-04 16:03:05.483783	hard	default_level
How can you access a private method in a Python class from outside the class?	By using the @private decorator	By calling the method using the class name	By using the _classname__methodname syntax	By importing the method from the class	By using the _classname__methodname syntax	0ca10a6a-9052-482b-b7d9-9501ad3eb908	2025-01-04 16:03:05.49043	hard	default_level
In Python, what is the purpose of a metaclass in object-oriented programming?	To define how instances of a class are created	To define the behavior of class methods	To restrict access to class attributes	To handle exceptions in class constructors	To define how instances of a class are created	4499e0ae-498d-4580-92a6-ea6e51b1c724	2025-01-04 16:03:05.497031	hard	default_level
Explain the concept of multiple inheritance in Python's object-oriented programming.	It allows a class to inherit attributes and methods from multiple parent classes	It restricts a class to inherit from only one parent class	It enables a class to inherit from built-in Python classes only	It allows a class to inherit from subclasses only	It allows a class to inherit attributes and methods from multiple parent classes	1a9e0684-87c6-41de-9147-07eecd254f05	2025-01-04 16:03:05.503907	hard	default_level
How does Python support method overloading in object-oriented programming?	By allowing multiple methods with the same name but different parameters	By automatically converting method names to unique identifiers	By restricting methods to have unique names within a class	By enforcing static typing for method parameters	By allowing multiple methods with the same name but different parameters	3ef25bf7-4b96-4312-9778-fce9dadffb01	2025-01-04 16:03:05.5109	hard	default_level
What is the purpose of the super() function in Python's object-oriented programming?	To call the constructor of the parent class	To access private methods of the parent class	To override methods of the parent class	To create instances of the parent class	To call the constructor of the parent class	38507c9b-736d-4cf7-ac54-504c8a41fcd5	2025-01-04 16:03:05.517502	hard	default_level
Explain the difference between class variables and instance variables in Python's object-oriented programming.	Class variables are shared among all instances of a class, while instance variables are unique to each instance	Class variables are unique to each instance of a class, while instance variables are shared among all instances	Class variables are used for method overloading, while instance variables define class behavior	Instance variables are used for inheritance, while class variables define instance behavior	Class variables are shared among all instances of a class, while instance variables are unique to each instance	445507b9-36e9-4dd8-b52a-f8ed50d14888	2025-01-04 16:03:05.523959	hard	default_level
How can encapsulation be achieved in Python's object-oriented programming?	By using private methods and attributes	By inheriting from multiple parent classes	By defining class variables outside the class definition	By using global variables within class methods	By using private methods and attributes	196be3b7-fa11-4f65-8857-50f2e952a609	2025-01-04 16:03:05.530574	hard	default_level
What is the purpose of the @property decorator in Python's object-oriented programming?	To define private attributes within a class	To create read-only class attributes	To restrict access to class methods	To handle exceptions in class constructors	To create read-only class attributes	2780ce43-2c8c-4470-9717-231f7d8d8cda	2025-01-04 16:03:05.537225	hard	default_level
Explain the concept of method resolution order (MRO) in Python's object-oriented programming.	It defines the order in which methods are inherited from parent classes	It enforces the order of method calls within a class	It determines the order of method overloading in a class	It specifies the order of method definitions within a class	It defines the order in which methods are inherited from parent classes	ac594ba1-e642-4259-9511-b2dbc52f2b9f	2025-01-04 16:03:05.543743	hard	default_level
How does Python support method overriding in object-oriented programming?	By allowing a subclass to provide a specific implementation of a method that is already provided by its parent class	By restricting a subclass from accessing methods of its parent class	By enforcing a subclass to inherit all methods from its parent class	By automatically converting method names to unique identifiers	By allowing a subclass to provide a specific implementation of a method that is already provided by its parent class	dd4e7c97-6be7-4e92-af8b-2ee9c02fa261	2025-01-04 16:03:05.550499	hard	default_level
What is the purpose of the __init__ method in Python's object-oriented programming?	To initialize class variables	To define private methods within a class	To restrict access to class attributes	To handle exceptions in class constructors	To initialize class variables	a80eeda1-0890-48bd-9fd7-bf61f5f5b251	2025-01-04 16:03:05.557151	hard	default_level
How can you implement method overloading in Python classes?	By defining multiple methods with the same name but different parameters	By using decorators to specify method overloading	By using inheritance to override methods	Method overloading is not supported in Python	By defining multiple methods with the same name but different parameters	c51f3c03-aa2c-409b-ac7c-a05b77687097	2025-01-04 16:03:05.566801	hard	default_level
Explain the concept of multiple inheritance in Python and discuss its advantages and disadvantages in object-oriented programming.	Allows a class to inherit attributes and methods from multiple parent classes	Can lead to ambiguity and complexity in the code	Facilitates code reusability and flexibility	All of the above	All of the above	066269de-b286-4993-ad28-a823988f93ad	2025-01-04 16:03:05.573412	hard	default_level
How does Python support encapsulation in object-oriented programming?	By allowing private methods and attributes using naming conventions	By using access specifiers like public, private, and protected	By restricting access to certain methods and attributes	All of the above	All of the above	93ecbfe2-9406-4114-ae96-6209cde62eea	2025-01-04 16:03:05.580399	hard	default_level
Discuss the importance of the super() function in Python's object-oriented programming paradigm.	It allows access to the parent class methods and attributes	It enables method overriding in subclasses	It is used to create new instances of a class	It is a built-in decorator for classes	It allows access to the parent class methods and attributes	6a385b71-b691-4054-b0bc-8dd7de976d6a	2025-01-04 16:03:05.587409	hard	default_level
What is the purpose of a loop in Python?	To define a function	To iterate over a sequence of elements	To perform mathematical operations	To handle exceptions	To iterate over a sequence of elements	662c332a-a50f-4aac-bf6f-e86dc4041143	2025-01-05 16:23:42.414024	medium	default_level
Which keyword is used to define a function in Python?	define	function	def	define_function	def	d14bde3c-fec4-4d52-bd02-e60e1d165b30	2025-01-05 16:23:42.422587	medium	default_level
What is the output of the following code snippet?\ndef my_function(x, y):\n    return x * y\n\nresult = my_function(3, 4)\nprint(result)	12	7	34	None	12	9e1bb309-54d9-4557-924b-c63d5335fdf9	2025-01-05 16:23:42.428808	medium	default_level
In Python, what is the purpose of the 'break' statement in a loop?	To skip the current iteration and continue with the next one	To exit the loop immediately	To restart the loop from the beginning	To check a condition and continue the loop	To exit the loop immediately	463df807-54e4-4fa0-871f-89d5d71541e2	2025-01-05 16:23:42.435954	medium	default_level
Which of the following is a valid way to call a function named 'my_function' in Python?	call my_function()	my_function.call()	my_function()	function my_function()	my_function()	bfabc42e-f9ff-4400-99cc-d11f034644cf	2025-01-05 16:23:42.442851	medium	default_level
What is the purpose of the 'return' statement in a Python function?	To print a value to the console	To define a new variable	To exit the function and return a value	To skip the function execution	To exit the function and return a value	43f6bf87-3808-41a3-be12-2aa710e38e8d	2025-01-05 16:23:42.449872	medium	default_level
How can you create an infinite loop in Python using a 'while' loop?	while True:	while False:	while 1 == 1:	while x < 10:	while True:	5cfae6a1-8b06-470a-b197-ef254ca57e96	2025-01-05 16:23:42.456824	medium	default_level
What is the purpose of the 'pass' statement in Python?	To stop the execution of the program	To skip the current iteration in a loop	To define a new function	To do nothing and act as a placeholder	To do nothing and act as a placeholder	257a0edd-99e4-426f-9c80-882b677790e8	2025-01-05 16:23:42.465288	medium	default_level
Which of the following is a valid way to define a function in Python?	function my_function():	def my_function():	define my_function():	func my_function():	def my_function():	b4f60661-ebd9-475d-9d98-2cb851a49cf2	2025-01-05 16:23:42.472565	medium	default_level
What is the purpose of the 'continue' statement in a loop?	To exit the loop immediately	To restart the loop from the beginning	To skip the current iteration and continue with the next one	To check a condition and continue the loop	To skip the current iteration and continue with the next one	536cfcc8-c497-42b5-bf16-cb3facb2f739	2025-01-05 16:23:42.480155	medium	default_level
What is the time complexity of the binary search algorithm?	O(n)	O(log n)	O(n^2)	O(1)	O(log n)	5bd1b445-b92c-45d7-985e-729cc8613611	2025-01-05 16:45:48.455728	medium	default_level
When would you use a breadth-first search (BFS) algorithm over a depth-first search (DFS) algorithm?	When finding the shortest path in an unweighted graph	When memory usage is a concern	When the graph is cyclic	When the graph is directed	When finding the shortest path in an unweighted graph	d2c09fd0-e5ea-4955-97e9-038bfc77a2cd	2025-01-05 16:45:48.463744	medium	default_level
What is the purpose of the 'yield' keyword in Python?	To return a value from a function	To define a generator function	To raise an exception	To break out of a loop	To define a generator function	d2c8541d-9f61-458d-a88e-1f3e325b2e3e	2025-01-05 16:45:48.469887	medium	default_level
How can you reverse a list in Python using slicing?	list[::-1]	list.reverse()	reversed(list)	list.reverse(0, len(list))	list[::-1]	959359a0-4934-4bf3-8785-f7c0e7939ab9	2025-01-05 16:45:48.47646	medium	default_level
What is the output of '2' + '3' in Python?	5	23	32	Error	23	0f3e4220-1d91-4dce-9cc9-59df5d6db294	2025-01-05 16:45:48.482832	medium	default_level
What is the time complexity of the quicksort algorithm in the best case?	O(n)	O(n log n)	O(n^2)	O(log n)	O(n log n)	207df4bc-2c5a-42c2-8034-1db834b4e527	2025-01-05 16:45:48.489175	medium	default_level
What is the purpose of using 'self' in Python class methods?	To refer to the current instance of the class	To create a new instance of the class	To access class attributes	To define a static method	To refer to the current instance of the class	2a36a502-1d34-46c5-a051-ea6593d47652	2025-01-05 16:45:48.49595	medium	default_level
What does the 'pass' statement do in Python?	Exits the loop	Continues to the next iteration of the loop	Does nothing	Raises an exception	Does nothing	1a6a0a64-d885-4b04-bc95-e179bbb67137	2025-01-05 16:45:48.502317	medium	default_level
How can you check if a key exists in a Python dictionary?	Using the 'search' method	Using 'in' keyword	Using 'exists' function	Using 'has_key' method	Using 'in' keyword	bcd8241b-080b-45eb-a48e-cbf75c1dfc8c	2025-01-05 16:45:48.509341	medium	default_level
What is the output of 'Hello, World!'[3:] in Python?	Hello	World!	lo, World!	lo, World	lo, World!	cab8fd5b-899b-465d-9288-f628f5c901cd	2025-01-05 16:45:48.515924	medium	default_level
Which data structure is typically used to implement a LIFO behavior?	Queue	Heap	Stack	Linked List	Stack	bc8f14a0-eea3-466f-add3-8ff9a4fa0686	2025-01-05 16:45:48.525742	medium	default_level
In Python, what is the output of the following code snippet?\n\n```python\na = [1, 2, 3]\nb = a\nb.append(4)\nprint(a)\n```	[1, 2, 3]	[1, 2, 3, 4]	[1, 2, 4]	[1, 2, 3, 4, 4]	[1, 2, 3, 4]	d90ff69f-dea3-4c95-acd4-7fea3cd2a5be	2025-01-05 16:45:48.532679	medium	default_level
Which sorting algorithm has the best worst-case time complexity?	Bubble Sort	Insertion Sort	Merge Sort	Selection Sort	Merge Sort	09627225-12c2-43b4-806d-5127161f205a	2025-01-05 16:45:48.542298	medium	default_level
What is the output of the following Python code?\n\n```python\nprint(2 ** 3 ** 2)\n```	64	512	72	9	512	f967f892-e56b-4215-a341-004695e2d427	2025-01-05 16:45:48.550717	medium	default_level
When is it appropriate to use a breadth-first search (BFS) algorithm over a depth-first search (DFS) algorithm?	When finding the shortest path in an unweighted graph	When memory consumption is a concern	When the graph is cyclic	When the graph is sparse	When finding the shortest path in an unweighted graph	54be33a2-dc38-4885-8b84-9507032113ab	2025-01-05 16:45:48.557559	medium	default_level
What is the time complexity of the quicksort algorithm in the best-case scenario?	O(n)	O(n log n)	O(n^2)	O(log n)	O(n log n)	a0ecf45d-d722-4b62-8373-d8a3fcc46a0e	2025-01-05 16:45:48.564201	medium	default_level
In Python, what will be the output of the following code snippet?\n\n```python\nprint(' '.join([str(i) for i in range(5)]))\n```	0 1 2 3 4	1 2 3 4 5	0 1 2 3	1 2 3 4	0 1 2 3 4	3a0ba658-7145-467e-878b-538490626382	2025-01-05 16:45:48.571858	medium	default_level
What is the key difference between a set and a frozenset in Python?	A set is mutable while a frozenset is immutable	A set allows duplicate elements while a frozenset does not	A frozenset can be converted to a list but a set cannot	A set is ordered while a frozenset is unordered	A set is mutable while a frozenset is immutable	6c75739e-824d-4a3f-9809-5c3b7f0936ca	2025-01-05 16:45:48.57843	medium	default_level
What is the difference between '==' and 'is' in Python?	Both are used for value comparison.	'==' is used for reference comparison, 'is' is used for value comparison.	'==' is used for value comparison, 'is' is used for reference comparison.	'==' and 'is' are interchangeable in Python.	'==' is used for value comparison, 'is' is used for reference comparison.	d57b19a9-e6e7-4a2e-afd4-32db26239c10	2025-01-05 16:45:48.610809	medium	default_level
What is the difference between '==' and 'is' operators in Python?	'==' is used for value comparison, 'is' is used for identity comparison	'==' is used for identity comparison, 'is' is used for value comparison	'==' and 'is' are interchangeable	There is no difference between '==' and 'is'	'==' is used for value comparison, 'is' is used for identity comparison	b43ef94b-2335-49b7-9e39-13cfd0fd9bdd	2025-01-05 18:57:39.719331	medium	default_level
What is the purpose of the 'global' keyword in Python?	To define a global variable within a function	To access a global variable from within a function	To declare a variable as global throughout the program	To restrict a variable's scope to a specific function	To declare a variable as global throughout the program	2d8f5692-2597-472a-8121-63e004bb21f6	2025-01-05 18:57:39.734414	medium	default_level
What is the purpose of the 'enumerate' function in Python?	To iterate over a sequence while keeping track of the index	To filter elements in a sequence based on a condition	To sort a sequence in ascending order	To reverse a sequence	To iterate over a sequence while keeping track of the index	1d8a5ab9-3a4f-4ad7-864e-6d93d3372e40	2025-01-05 18:57:39.748568	medium	default_level
What is the time complexity of the built-in Python function 'sorted()' when sorting a list of n elements?	O(n)	O(n log n)	O(n^2)	O(log n)	O(n log n)	c43eeb09-b0cf-4884-9d7c-38d624fcd22c	2025-01-05 18:57:39.762613	medium	default_level
In Python, what is the purpose of the 'lambda' function?	To create anonymous functions	To define global variables	To handle exceptions	To perform file I/O operations	To create anonymous functions	bbe2d2ad-b713-4618-afb3-3167b43c8768	2025-01-05 18:57:39.769581	medium	default_level
What is the output of the following Python code snippet?\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nresult = list(map(lambda x: x * 2, numbers))\nprint(result)\n```	[2, 4, 6, 8, 10]	[1, 2, 3, 4, 5]	[1, 4, 9, 16, 25]	[2, 3, 4, 5, 6]	[2, 4, 6, 8, 10]	f57f85a3-cde2-4e7f-b9bd-1e122fbe918c	2025-01-05 18:57:39.77652	medium	default_level
What is the purpose of the 'enumerate()' function in Python?	To iterate over a sequence while keeping track of the index	To sort a list in ascending order	To remove duplicates from a list	To reverse a list	To iterate over a sequence while keeping track of the index	5dba8aab-b4ba-4fc6-898c-f79b976a8781	2025-01-05 18:57:39.783321	medium	default_level
Which data structure in Python is typically used to implement a Last-In-First-Out (LIFO) approach?	Queue	Stack	Heap	Linked List	Stack	3329d3d7-8884-4690-a044-6ad06b68432f	2025-01-05 18:57:39.790411	medium	default_level
What is the output of the following Python code snippet?\n\n```python\nimport math\nresult = math.ceil(5.6)\nprint(result)\n```	5	6	5.0	6.0	6	571dacfa-26c8-4918-97a0-6d47935268d2	2025-01-05 18:57:39.797058	medium	default_level
In Python, what does the 'pass' statement do?	Terminates the program	Skips the current iteration in a loop	Raises an exception	Does nothing	Does nothing	aa6a7a97-74bf-4ead-8e3c-df839492f502	2025-01-05 18:57:39.804201	medium	default_level
What is the purpose of the 'zip()' function in Python?	To combine two lists into a dictionary	To concatenate strings	To iterate over two or more lists in parallel	To perform bitwise operations	To iterate over two or more lists in parallel	8869e66e-0067-49f7-9652-a88bf10ab927	2025-01-05 18:57:39.810872	medium	default_level
What is the output of the following Python code snippet?\n\n```python\nnumbers = [1, 2, 3, 4, 5]\nresult = list(filter(lambda x: x % 2 == 0, numbers))\nprint(result)\n```	[1, 3, 5]	[2, 4]	[1, 2, 3, 4, 5]	[4]	[2, 4]	75ef84b8-eb43-4490-bd2c-4c5fa7080e07	2025-01-05 18:57:39.81788	medium	default_level
What is the purpose of the 'reduce()' function in Python?	To perform aggregation on a list	To remove elements from a list	To reverse a list	To sort a list	To perform aggregation on a list	23f24d90-283d-4c81-8895-f7898c463227	2025-01-05 18:57:39.824807	medium	default_level
What is the time complexity of the Python built-in function 'sorted()' when sorting a list of integers?	O(n)	O(n log n)	O(n^2)	O(log n)	O(n log n)	732cd6c8-346f-421c-9343-4a81881616f6	2025-01-05 18:57:39.831776	medium	default_level
In Python, what is the purpose of the 'zip()' function?	To combine two lists into a dictionary	To concatenate two strings	To iterate over two lists simultaneously	To sort a list in descending order	To iterate over two lists simultaneously	f2fd9881-e2c4-4b6b-8260-99ef7a161b86	2025-01-05 18:57:39.838557	medium	default_level
How can you remove all occurrences of a specific element from a Python list?	Using the 'delete()' method	Using list comprehension	Using the 'remove()' method	Using the 'filter()' function	Using list comprehension	81dcf8a6-9c91-4b49-8b16-e316e3398228	2025-01-05 18:57:39.848241	medium	default_level
In Python, which loop is used when a specific condition needs to be checked before each iteration?	for loop	while loop	do-while loop	foreach loop	while loop	ed7f72b0-42d4-46df-af30-38a69b0fe8b7	2025-01-05 19:34:19.805939	hard	default_level
What is the purpose of a return statement in a Python function?	To stop the function execution	To return a value from the function	To print a message	To define a new variable	To return a value from the function	16777a12-27b5-4f72-b465-9e4d4732d823	2025-01-05 19:34:19.811961	hard	default_level
Which of the following is true about the range() function in Python?	It generates a list of numbers	It is used to iterate over a sequence of numbers	It is used to define a range for a loop	It is used to check the length of a list	It is used to iterate over a sequence of numbers	fba04236-b32d-42d5-95c4-8fcd104c5e28	2025-01-05 19:34:19.815867	hard	default_level
What is the output of the following code snippet?\n\n```python\nfor i in range(3):\n    print(i)\n```	0 1 2	1 2 3	0 1 2 3	1 2 3 4	0 1 2	7ccc4e1d-b965-466c-805e-055cb571fb18	2025-01-05 19:34:19.818905	hard	default_level
Which keyword is used to exit a loop prematurely in Python?	break	stop	exit	end	break	29ea9e81-1636-4274-a6fe-db362d285315	2025-01-05 19:34:19.822466	hard	default_level
Which of the following is true about recursion in Python?	It is not supported in Python	It is a loop structure	It is a function calling itself	It can only be used with while loops	It is a function calling itself	fcd66799-6a98-4b18-a400-122a8ef4d247	2025-01-05 19:34:19.827883	hard	default_level
What is the purpose of the 'continue' statement in Python?	To exit the loop	To skip the current iteration and continue with the next	To restart the loop	To print a message	To skip the current iteration and continue with the next	f4cde9cb-3ded-4ee7-8f0d-67ed354f49bc	2025-01-05 19:34:19.832023	hard	default_level
Which of the following is true about functions in Python?	A function can only return one value	A function can have multiple return statements	A function cannot accept arguments	A function cannot call another function	A function can have multiple return statements	d530549a-5b7a-44dc-845d-2d0bc53218d2	2025-01-05 19:34:19.835794	hard	default_level
What does the 'def' keyword stand for in Python?	Define	Declare	Defend	Default	Define	81afb8b1-f085-4d91-b294-74bd10efd43f	2025-01-05 19:34:19.838927	hard	default_level
Which of the following is true about function arguments in Python?	All arguments in Python functions are required	Default arguments must be placed before non-default arguments	Keyword arguments cannot be used in Python functions	Arguments in Python functions are not type-specific	Default arguments must be placed before non-default arguments	8e5c366a-0524-48ab-b3be-858fbf8b8efe	2025-01-05 19:34:19.842065	hard	default_level
What is the purpose of the 'lambda' keyword in Python?	To define a new class	To create anonymous functions	To import external modules	To handle exceptions	To create anonymous functions	50819042-e336-411a-aca4-b41f4e758a1c	2025-01-05 19:34:19.84643	hard	default_level
Which of the following is true about the 'global' keyword in Python?	It is used to define a global variable	It is used to declare a function as global	It is used to access a global variable within a function	It is used to restrict variable scope	It is used to access a global variable within a function	6ba09822-a197-45c3-a271-cb60a2dcb83c	2025-01-05 19:34:19.849892	hard	default_level
What is the output of the following code snippet?\n\n```python\nx = 5\n\ndef func():\n    x = 10\n    print(x)\n\nfunc()\nprint(x)\n```	5 10	10 5	10 10	5 5	10 5	fe5cc2ca-6be0-48e2-a4af-e199985e9168	2025-01-05 19:34:19.853112	hard	default_level
Which of the following is true about the 'return' statement in Python functions?	A function can have multiple return statements	The return statement is mandatory in all functions	The return statement can only return integers	The return statement stops the function execution	The return statement stops the function execution	e40fbfaa-d36f-422f-bab1-d140e90d741f	2025-01-05 19:34:19.85616	hard	default_level
Which of the following is true about the 'pass' statement in Python?	It is used to exit a loop	It is used to skip a block of code	It is used to define a new function	It is used to print a message	It is used to skip a block of code	317016f8-e5a4-4eda-82c2-fba385f9fae8	2025-01-05 19:34:19.861616	hard	default_level
What is the purpose of the 'assert' statement in Python?	To handle exceptions	To define a new variable	To check if a condition is true	To stop the program	To check if a condition is true	dffd704b-9903-48cb-ac60-516595534984	2025-01-05 19:34:19.865559	hard	default_level
Which keyword is used to define a default argument in a Python function?	default	def	defaultarg	None of the above	None of the above	7b26414a-2cc6-4eb6-ba1c-5d6cf07a2821	2025-01-05 19:34:19.868866	hard	default_level
What is the purpose of the 'if' statement in Python?	To declare a loop	To define a function	To perform a conditional execution	To import a module	To perform a conditional execution	47d7be43-31fa-4188-a99a-c9706e7a7f51	2025-01-10 16:41:43.472728	easy	default_level
Which of the following data types is not supported in Python?	List	Tuple	Array	Dictionary	Array	db9190d8-ae82-4ae3-8104-0b6682d80783	2025-01-10 16:41:43.476269	easy	default_level
What is the output of the following Python code snippet?\n\nx = 5\ny = 2\nresult = x // y	2.5	2	3	2.0	2	a2fdaef6-5a8e-4acb-8332-41d1c32619ff	2025-01-25 17:03:23.249332	easy	default_level
Which of the following is a valid Python variable name?	2count	_myVar	my-var	my Var	_myVar	f6a2ce99-5f45-4072-958f-024556233d0a	2025-01-25 17:03:23.256803	easy	default_level
\.


--
-- Data for Name: problem_solving_questions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.problem_solving_questions (problem_description, input_format, output_format, constraints, examples, edge_cases, id, created_at, difficulty_level) FROM stdin;
Write a Python function to find the median of two sorted arrays.	Input consists of two sorted arrays of integers.	Output should be a floating-point number representing the median of the two arrays.	The length of each array will not exceed 10^4. The arrays will be sorted in ascending order.	[{"input": "[1, 3]\\n[2]", "output": "2.0"}, {"input": "[1, 2]\\n[3, 4]", "output": "2.5"}]	[{"input": "[1, 2, 3, 4]\\n[5, 6, 7, 8]", "output": "4.5"}]	65b9c718-68a6-445a-b8d0-de8ca61085d5	2024-12-29 17:48:50.536607	High
Write a Python function that takes a list of integers and returns the maximum product of three numbers from the list. The function should handle both positive and negative integers.	Input consists of a list of integers.	Output should be an integer representing the maximum product of three numbers.	The length of the list will be at least 3 and at most 10^4. Integers in the list will be in the range [-1000, 1000].	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -5, 1, 2, 3]", "output": "150"}]	[{"input": "[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]", "output": "125"}]	06b80580-4ed1-42af-a743-e0a9184c8836	2024-12-29 17:50:01.970269	Medium
Write a Python function that checks if a given string is a palindrome, ignoring spaces and punctuation.	Input is a string containing only alphabetical characters and spaces.	Output should be a boolean value, True if the string is a palindrome, otherwise False.	The length of the string will be at most 10^5 characters.	[{"input": "A man a plan a canal Panama", "output": "True"}, {"input": "Hello World", "output": "False"}]	[{"input": "Madam", "output": "True"}, {"input": " ", "output": "True"}]	62d61d01-909b-4625-8a94-251e3a112a74	2024-12-29 17:50:01.982727	Medium
Write a Python function that finds the shortest path in a graph from a source node to a destination node. You may assume the graph is represented as an adjacency matrix.	The input consists of an integer n (the number of nodes) and an n x n adjacency matrix where each element represents the distance between nodes. The source and destination nodes are also given as integers.	Output should be the length of the shortest path between the source and destination nodes.	The number of nodes, n, will be between 2 and 100. The graph will not contain negative weights.	[{"input": "4\\n[[0, 10, 15, 0], [10, 0, 35, 25], [15, 35, 0, 30], [0, 25, 30, 0]]\\n0 3", "output": "35"}, {"input": "5\\n[[0, 1, 4, 0, 0], [1, 0, 2, 5, 0], [4, 2, 0, 3, 0], [0, 5, 3, 0, 1], [0, 0, 0, 1, 0]]\\n0 4", "output": "7"}]	[{"input": "2\\n[[0, 10], [10, 0]]\\n0 1", "output": "10"}]	bb421015-b6e7-4f22-bc68-085d931c05f1	2024-12-29 17:50:01.984992	High
Write a Python function to solve the N-Queens problem using backtracking.	Input consists of a single integer n representing the size of the board (n x n).	Output should be a list of solutions, where each solution is represented by a list of integers where each integer represents the column position of the queen in the corresponding row.	1 <= n <= 10.	[{"input": "4", "output": "[[1, 3, 0, 2], [2, 0, 3, 1]]"}, {"input": "1", "output": "[[0]]"}]	[{"input": "2", "output": "[]"}]	1e5fe56f-fedc-4b2f-94d4-2f28594d6cc9	2024-12-29 17:50:01.989264	Medium
Write a Python function to implement the sliding window technique for finding the maximum sum of a subarray of a given size.	Input consists of an array of integers and an integer k representing the size of the subarray.	Output should be the maximum sum of any subarray of size k.	1 <= len(arr) <= 10^5, 1 <= k <= len(arr).	[{"input": "[2, 1, 5, 1, 3, 2]\\n3", "output": "9"}, {"input": "[1, 2, 3, 4, 5]\\n2", "output": "9"}]	[{"input": "[1, 1, 1, 1, 1]\\n3", "output": "3"}]	83109ad5-4e8e-466f-9512-8108a4f93fc9	2024-12-29 17:50:01.997125	Medium
Write a Python function to find the minimum number of operations required to convert one string to another using insertions, deletions, and substitutions.	Input consists of two strings, s1 and s2, with lengths between 1 and 1000 characters.	Output should be the minimum number of operations required to convert s1 to s2.	1 <= len(s1), len(s2) <= 1000.	[{"input": "kitten\\nsitting", "output": "3"}, {"input": "flaw\\nlawn", "output": "4"}]	[{"input": "a\\nb", "output": "1"}]	18457238-9d6e-4cbf-8889-19b9565eb564	2024-12-29 17:50:01.999943	High
Write a Python function to determine if a given number is a prime number.	Input consists of a single integer n.	Output should be a boolean value, True if n is a prime number, otherwise False.	1 <= n <= 10^6.	[{"input": "7", "output": "True"}, {"input": "10", "output": "False"}]	[{"input": "1", "output": "False"}, {"input": "2", "output": "True"}]	1f9e4e36-3337-4a6c-b338-c69f8d6d15ab	2024-12-29 17:50:02.002951	Medium
Write a Python function that finds all the permutations of a given string.	Input consists of a string containing only alphabetical characters.	Output should be a list of all unique permutations of the string.	The length of the string will be at most 9.	[{"input": "abc", "output": "['abc', 'acb', 'bac', 'bca', 'cab', 'cba']"}, {"input": "aab", "output": "['aab', 'aba', 'baa']"}]	[{"input": "a", "output": "['a']"}]	2367b35e-3d83-4d12-9146-58d60a1cd7b9	2024-12-29 17:54:33.815275	Medium
Write a Python function that calculates the longest common subsequence (LCS) of two strings.	Input consists of two strings, s1 and s2, with lengths between 1 and 1000 characters.	Output should be an integer representing the length of the longest common subsequence.	1 <= len(s1), len(s2) <= 1000.	[{"input": "ABCBDAB\\nBDCABB", "output": "4"}, {"input": "AGGTAB\\nGXTXAYB", "output": "4"}]	[{"input": "A\\nA", "output": "1"}]	6a2f4b1d-aed4-4f22-b24b-97c2a210d4a9	2024-12-29 17:54:54.102291	High
Write a Python function that checks whether two strings are anagrams of each other.	Input consists of two strings, s1 and s2.	Output should be a boolean value, True if the strings are anagrams, otherwise False.	1 <= len(s1), len(s2) <= 1000.	[{"input": "listen\\nsilent", "output": "True"}, {"input": "hello\\nworld", "output": "False"}]	[{"input": "a\\na", "output": "True"}]	cbc53483-1da5-4e60-844f-3434c9f6f446	2024-12-29 17:59:01.036912	Medium
Write a Python function to find the intersection of two arrays.	Input consists of two lists of integers, arr1 and arr2.	Output should be a list of integers that are common in both arrays.	1 <= len(arr1), len(arr2) <= 10^4.	[{"input": "[1, 2, 2, 1]\\n[2, 2]", "output": "[2, 2]"}, {"input": "[4, 9, 5]\\n[9, 4, 9, 8, 4]", "output": "[4, 9]"}]	[{"input": "[1, 2, 3]\\n[4, 5, 6]", "output": "[]"}]	9ccebc60-3b01-4c94-abb1-aca4e3769692	2024-12-29 17:59:01.039742	Medium
Write a Python function to find the longest substring without repeating characters.	Input consists of a string s.	Output should be an integer representing the length of the longest substring without repeating characters.	1 <= len(s) <= 10^5.	[{"input": "abcabcbb", "output": "3"}, {"input": "bbbbb", "output": "1"}]	[{"input": "pwwkew", "output": "3"}]	091d4172-8d33-4184-a320-b631a2f6ee57	2024-12-29 17:59:01.041528	High
Write a Python function to implement the binary search algorithm on a sorted array.	Input consists of a sorted array of integers and a target integer.	Output should be the index of the target integer if it exists in the array, otherwise -1.	1 <= len(arr) <= 10^5.	[{"input": "[1, 2, 3, 4, 5, 6, 7]\\n4", "output": "3"}, {"input": "[1, 2, 3, 4, 5, 6]\\n0", "output": "-1"}]	[{"input": "[1, 2, 3, 4]\\n5", "output": "-1"}]	539af322-cdff-4f77-9b71-694979d24096	2024-12-29 17:59:01.043681	Medium
Write a Python function to reverse a linked list.	Input consists of the head node of a singly linked list.	Output should be the head node of the reversed linked list.	1 <= len(list) <= 10^5.	[{"input": "[1, 2, 3, 4, 5]", "output": "[5, 4, 3, 2, 1]"}, {"input": "[1, 2]", "output": "[2, 1]"}]	[{"input": "[1]", "output": "[1]"}]	34e1c192-374d-4ebe-9c90-5fa54d926bc5	2024-12-29 17:59:01.045903	High
Write a Python function to find the Kth largest element in an array.	Input consists of an array of integers and an integer k.	Output should be the Kth largest element in the array.	1 <= len(arr) <= 10^5, 1 <= k <= len(arr).	[{"input": "[3, 2, 1, 5, 6, 4]\\n2", "output": "5"}, {"input": "[3, 2, 3, 1, 2, 4, 5, 5, 6]\\n4", "output": "4"}]	[{"input": "[1, 2, 3]\\n1", "output": "3"}]	b36a7803-9f15-4286-937b-89a2661e625c	2024-12-29 17:59:01.047656	High
Write a Python function to implement a depth-first search (DFS) on a graph.	Input consists of an adjacency list of a graph and a start node.	Output should be a list of nodes visited in the DFS order.	The graph will contain between 1 and 1000 nodes.	[{"input": "{0: [1, 2], 1: [3], 2: [4], 3: [], 4: []}\\n0", "output": "[0, 1, 3, 2, 4]"}, {"input": "{0: [1, 2], 1: [3], 2: [], 3: []}\\n0", "output": "[0, 1, 3, 2]"}]	[{"input": "{0: []}\\n0", "output": "[0]"}]	dd5bfc14-5cb6-4972-a5cf-5e242324113b	2024-12-29 17:59:01.049758	High
Write a Python function to find the longest increasing subsequence in an array.	Input consists of an array of integers.	Output should be the length of the longest increasing subsequence.	1 <= len(arr) <= 10^5.	[{"input": "[10, 9, 2, 5, 3, 7, 101, 18]", "output": "4"}, {"input": "[3, 2, 6, 4, 5, 1]", "output": "3"}]	[{"input": "[1, 2, 3, 4, 5]", "output": "5"}]	c2d4ae23-5f0d-4ac2-a9ef-19638d13f98c	2024-12-29 17:59:01.052365	High
Write a Python function to check if a given binary tree is balanced.	Input consists of the root node of a binary tree.	Output should be True if the binary tree is balanced, otherwise False.	1 <= number of nodes <= 10^4.	[{"input": "[3, 9, 20, null, null, 15, 7]", "output": "True"}, {"input": "[1, 2, 2, 3, 3, null, null, 4, 4]", "output": "False"}]	[{"input": "[1]", "output": "True"}]	8a54d3f2-dc59-4e7f-9bb4-b314db900c6c	2024-12-29 17:59:01.055023	High
Write a Python function to rotate an array to the right by k steps.	Input consists of an array of integers and an integer k representing the number of steps to rotate.	Output should be the rotated array.	1 <= len(arr) <= 10^5, 1 <= k <= len(arr).	[{"input": "[1, 2, 3, 4, 5, 6, 7]\\n3", "output": "[5, 6, 7, 1, 2, 3, 4]"}, {"input": "[1, 2, 3, 4, 5]\\n2", "output": "[4, 5, 1, 2, 3]"}]	[{"input": "[1, 2, 3]\\n0", "output": "[1, 2, 3]"}]	e2facbdf-3960-41ea-bef9-78c405a8439d	2024-12-29 18:00:56.868892	Medium
Write a Python function to find the unique elements in an array that appear only once.	Input consists of an array of integers.	Output should be a list of unique integers that appear only once in the array.	1 <= len(arr) <= 10^5.	[{"input": "[4, 3, 2, 7, 8, 3, 2, 1]", "output": "[4, 7, 8, 1]"}, {"input": "[1, 2, 2, 1, 3]", "output": "[3]"}]	[{"input": "[10, 10, 10, 10]", "output": "[]"}]	44266b0f-a93d-41b3-bb74-bf1647c1a688	2024-12-29 18:00:56.881446	Medium
Write a Python function to check if a number is a perfect square.	Input consists of a single integer n.	Output should be True if n is a perfect square, otherwise False.	1 <= n <= 10^6.	[{"input": "16", "output": "True"}, {"input": "14", "output": "False"}]	[{"input": "1", "output": "True"}]	2a8285b4-b761-4dcf-9fef-7e45bc55ec6f	2024-12-29 18:00:56.883488	Medium
Write a Python function to merge two sorted arrays into a single sorted array.	Input consists of two sorted arrays of integers.	Output should be a single sorted array containing all elements from both arrays.	1 <= len(arr1), len(arr2) <= 10^4.	[{"input": "[1, 3, 5, 7]\\n[2, 4, 6, 8]", "output": "[1, 2, 3, 4, 5, 6, 7, 8]"}, {"input": "[1, 2, 3]\\n[0, 4, 5]", "output": "[0, 1, 2, 3, 4, 5]"}]	[{"input": "[1, 3, 5]\\n[]", "output": "[1, 3, 5]"}]	c64e80d4-c5ee-4d95-a0c0-9249cf422e2f	2024-12-29 18:00:56.885262	Medium
Write a Python function to find the longest palindrome in a string.	Input consists of a string s.	Output should be the longest palindrome substring in s.	1 <= len(s) <= 10^5.	[{"input": "babad", "output": "bab"}, {"input": "cbbd", "output": "bb"}]	[{"input": "a", "output": "a"}]	9e60ef6b-a6ef-4501-9998-26bad4d885c3	2024-12-29 18:00:56.886879	High
Write a Python function to find the sum of all prime numbers up to a given number n.	Input consists of a single integer n.	Output should be the sum of all prime numbers less than or equal to n.	1 <= n <= 10^6.	[{"input": "10", "output": "17"}, {"input": "5", "output": "10"}]	[{"input": "1", "output": "0"}]	dcad5174-646d-49fb-a4e9-f4331247569b	2024-12-29 18:00:56.888591	Medium
Write a Python function to generate all possible combinations of a given list of numbers.	Input consists of a list of integers.	Output should be a list of lists, where each list is a combination of elements.	1 <= len(arr) <= 12.	[{"input": "[1, 2, 3]", "output": "[[1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]"}, {"input": "[0, 1]", "output": "[[0], [1], [0, 1]]"}]	[{"input": "[1]", "output": "[[1]]"}]	992eca05-ef9f-463a-ac1b-99e71b6ddae9	2024-12-29 18:00:56.890296	Medium
Write a Python function to check if two strings are isomorphic.	Input consists of two strings s1 and s2.	Output should be True if the strings are isomorphic, otherwise False.	1 <= len(s1), len(s2) <= 10^5.	[{"input": "egg\\nadd", "output": "True"}, {"input": "foo\\nbar", "output": "False"}]	[{"input": "a\\na", "output": "True"}]	679d28bd-602a-46ca-9c63-ab657526910f	2024-12-29 18:00:56.892077	Medium
Write a Python function to implement the merge sort algorithm.	Input consists of an array of integers.	Output should be the sorted array.	1 <= len(arr) <= 10^5.	[{"input": "[3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]", "output": "[1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]"}, {"input": "[8, 7, 6, 5, 4, 3, 2, 1]", "output": "[1, 2, 3, 4, 5, 6, 7, 8]"}]	[{"input": "[1, 2, 3]", "output": "[1, 2, 3]"}]	ae2ff770-51f2-48d6-afab-441596f8ae25	2024-12-29 18:00:56.89369	High
Write a Python function to determine if a string has all unique characters.	Input consists of a string s.	Output should be True if the string has all unique characters, otherwise False.	1 <= len(s) <= 10^5.	[{"input": "abcdef", "output": "True"}, {"input": "aabbcc", "output": "False"}]	[{"input": "a", "output": "True"}]	fb6aacd5-4d03-4f4c-8ba8-b155e727f71f	2024-12-29 18:02:26.783595	Medium
Write a Python function to find the kth smallest element in an unsorted array.	Input consists of an array of integers and an integer k.	Output should be the kth smallest element in the array.	1 <= len(arr) <= 10^5, 1 <= k <= len(arr).	[{"input": "[7, 10, 4, 3, 20, 15]\\n4", "output": "10"}, {"input": "[12, 3, 5, 7, 19]\\n2", "output": "5"}]	[{"input": "[5, 5, 5, 5, 5]\\n1", "output": "5"}]	af4ae566-0875-4719-9ec4-7b7fba359075	2024-12-29 18:02:26.790447	High
Write a Python function to generate Pascal's Triangle up to the nth row.	Input consists of a single integer n.	Output should be a list of lists representing the first n rows of Pascal's Triangle.	1 <= n <= 30.	[{"input": "5", "output": "[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]"}, {"input": "3", "output": "[[1], [1, 1], [1, 2, 1]]"}]	[{"input": "1", "output": "[[1]]"}]	46eec122-06e2-42b3-8284-e50af074f8d5	2024-12-29 18:02:26.794077	Medium
Write a Python function to find all the prime factors of a given number n.	Input consists of a single integer n.	Output should be a list of prime factors of n.	1 <= n <= 10^6.	[{"input": "28", "output": "[2, 2, 7]"}, {"input": "12", "output": "[2, 2, 3]"}]	[{"input": "1", "output": "[]"}]	f05d4bf6-7ffc-43ab-a60b-f390c08b3bba	2024-12-29 18:02:26.796619	Medium
Write a Python function to find the maximum product subarray in a given array of integers.	Input consists of an array of integers.	Output should be the maximum product of any subarray.	1 <= len(arr) <= 10^5.	[{"input": "[2, 3, -2, 4]", "output": "6"}, {"input": "[-2, 0, -1]", "output": "0"}]	[{"input": "[-2, -3, 0, -2, -40]", "output": "240"}]	7ac627e5-a62e-4107-b045-5f7e76ca1371	2024-12-29 18:02:26.798721	High
Write a Python function to find the maximum sum of a subarray of size k.	Input consists of an array of integers and an integer k.	Output should be the maximum sum of any subarray of size k.	1 <= len(arr) <= 10^5, 1 <= k <= len(arr).	[{"input": "[2, 1, 5, 1, 3, 2]\\n3", "output": "9"}, {"input": "[1, 2, 3, 4, 5]\\n2", "output": "9"}]	[{"input": "[1, 1, 1, 1, 1]\\n3", "output": "3"}]	df5b6373-c62e-4419-991d-b12f209d2823	2024-12-29 18:02:26.800582	Medium
Write a Python function to check if a number is a power of two.	Input consists of a single integer n.	Output should be True if n is a power of two, otherwise False.	1 <= n <= 10^6.	[{"input": "16", "output": "True"}, {"input": "18", "output": "False"}]	[{"input": "1", "output": "True"}]	8c6e8f13-9336-4ff2-a23e-7275248f2af9	2024-12-29 18:02:26.802652	Medium
Write a Python function to implement binary search on a sorted array.	Input consists of a sorted array of integers and an integer target.	Output should be the index of the target in the array, or -1 if the target is not found.	1 <= len(arr) <= 10^5.	[{"input": "[1, 3, 5, 7, 9, 11]\\n5", "output": "2"}, {"input": "[1, 2, 3, 4, 5]\\n6", "output": "-1"}]	[{"input": "[1, 3, 5, 7]\\n3", "output": "1"}]	ed41ec26-faaf-4ba6-8610-998ee72989f0	2024-12-29 18:02:26.804408	Medium
Write a Python function to implement a basic calculator that supports addition, subtraction, multiplication, and division.	Input consists of a string containing a mathematical expression.	Output should be the result of the evaluation of the expression.	The expression will only contain integers and operators (+, -, *, /).	[{"input": "3+2*2", "output": "7"}, {"input": "3/2", "output": "1"}]	[{"input": "3+5/2", "output": "5"}]	69586c90-5199-4f7a-b9eb-2c1d466c4219	2024-12-29 18:04:20.742903	Medium
Write a Python function to check if two strings are anagrams of each other.	Input consists of two strings, s1 and s2.	Output should be True if the strings are anagrams, otherwise False.	1 <= len(s1), len(s2) <= 10^5.	[{"input": "anagram\\nnagaram", "output": "True"}, {"input": "rat\\ncar", "output": "False"}]	[{"input": "listen\\nsilent", "output": "True"}]	54794878-8f20-4ab8-bd84-e0581fca1dd3	2024-12-29 18:04:20.75589	Medium
Write a Python function to find the missing number in a list of consecutive numbers.	Input consists of a list of n-1 integers from 1 to n.	Output should be the missing number.	The length of the list will be at most 10^5.	[{"input": "[1, 2, 4, 5, 6]", "output": "3"}, {"input": "[2, 3, 4, 5]", "output": "1"}]	[{"input": "[2]", "output": "1"}]	885c2a2d-a202-4664-af91-2bb7847b0cb0	2024-12-29 18:04:20.757876	Medium
Write a Python function to count the number of words in a sentence, ignoring punctuation and spaces.	Input consists of a string s containing words and punctuation.	Output should be an integer representing the word count.	The length of the string will be at most 10^5.	[{"input": "Hello, world! How are you?", "output": "5"}, {"input": "Python is great.", "output": "3"}]	[{"input": "   ", "output": "0"}]	3035c916-54cf-45b0-897a-d4eb330c1e2e	2024-12-29 18:04:20.759741	Medium
Write a Python function to remove duplicates from a sorted array.	Input consists of a sorted array of integers.	Output should be the array after removing duplicates.	1 <= len(arr) <= 10^5.	[{"input": "[1, 1, 2]", "output": "[1, 2]"}, {"input": "[0, 0, 1, 1, 2, 2, 3]", "output": "[0, 1, 2, 3]"}]	[{"input": "[1, 1, 1]", "output": "[1]"}]	800be49f-4d1d-456a-8007-87d2a79229fc	2024-12-29 18:04:20.761823	Medium
Write a Python function to implement a stack using two queues.	Input consists of a series of operations to perform on the stack.	Output should be the result of the operations performed on the stack.	1 <= len(operations) <= 10^4.	[{"input": "push(1), push(2), pop()", "output": "2"}, {"input": "push(3), push(4), pop(), pop()", "output": "4, 3"}]	[{"input": "pop()", "output": "Error: Stack is empty"}]	cc50c040-d2e6-4734-b297-88b67429d827	2024-12-29 18:04:20.765248	High
Write a Python function to implement depth-first search (DFS) on a graph.	Input consists of a graph represented as an adjacency list and a start node.	Output should be a list of nodes visited in DFS order.	1 <= n <= 100.	[{"input": "adjacency_list = {0: [1, 2], 1: [0, 3], 2: [0, 3], 3: [1, 2]}, start = 0", "output": "[0, 1, 3, 2]"}, {"input": "adjacency_list = {0: [1], 1: [0]}, start = 0", "output": "[0, 1]"}]	[{"input": "adjacency_list = {0: []}, start = 0", "output": "[0]"}]	956823fb-3b47-4131-9016-c58f107d7e94	2024-12-29 18:04:20.767573	High
Write a Python function to implement breadth-first search (BFS) on a graph.	Input consists of a graph represented as an adjacency list and a start node.	Output should be a list of nodes visited in BFS order.	1 <= n <= 100.	[{"input": "adjacency_list = {0: [1, 2], 1: [0, 3], 2: [0, 3], 3: [1, 2]}, start = 0", "output": "[0, 1, 2, 3]"}, {"input": "adjacency_list = {0: [1], 1: [0]}, start = 0", "output": "[0, 1]"}]	[{"input": "adjacency_list = {0: []}, start = 0", "output": "[0]"}]	0a66d4f5-608e-4979-9604-104fe7607bb2	2024-12-29 18:04:20.76967	High
Write a Python function to perform matrix multiplication.	Input consists of two matrices A and B where the number of columns of A is equal to the number of rows of B.	Output should be the resultant matrix after multiplication.	1 <= len(A), len(B) <= 100.	[{"input": "[[1, 2], [3, 4]]\\n[[5, 6], [7, 8]]", "output": "[[19, 22], [43, 50]]"}, {"input": "[[1, 0], [0, 1]]\\n[[1, 1], [1, 1]]", "output": "[[1, 1], [1, 1]]"}]	[{"input": "[[1]]\\n[[1]]", "output": "[[1]]"}]	a2ad3293-2e5f-4510-974c-fc82b87d40a2	2024-12-29 18:04:20.771398	High
Write a Python function to solve the knapsack problem using dynamic programming.	Input consists of an array of values and weights of items, and the maximum capacity of the knapsack.	Output should be the maximum value that can be obtained.	1 <= len(weights) <= 100, 1 <= capacity <= 100.	[{"input": "[60, 100, 120]\\n[10, 20, 30]\\n50", "output": "220"}, {"input": "[60, 50, 70]\\n[10, 20, 30]\\n50", "output": "120"}]	[{"input": "[10]\\n[1]\\n10", "output": "10"}]	3e6d30a7-0c34-409c-965f-6e572fe34ca8	2024-12-29 18:04:20.77324	High
Write a Python function to check if a given number is a perfect square.	Input consists of a single integer n.	Output should be a boolean value, True if n is a perfect square, otherwise False.	1 <= n <= 10^6.	[{"input": "16", "output": "True"}, {"input": "14", "output": "False"}]	[{"input": "1", "output": "True"}]	e65f7482-3ec2-401f-9abf-9b261033ab62	2024-12-29 18:06:03.674374	Medium
Write a Python function to merge two sorted arrays into one sorted array.	Input consists of two sorted arrays of integers.	Output should be a sorted array containing all elements of both input arrays.	1 <= len(arr1), len(arr2) <= 10^4.	[{"input": "[1, 3, 5]\\n[2, 4, 6]", "output": "[1, 2, 3, 4, 5, 6]"}, {"input": "[0, 2, 4]\\n[1, 3, 5]", "output": "[0, 1, 2, 3, 4, 5]"}]	[{"input": "[1, 2, 3]\\n[]", "output": "[1, 2, 3]"}]	938f986b-9fa5-4a6c-8062-4fbed45df745	2024-12-29 18:06:03.677287	Medium
Write a Python function to find the first non-repeating character in a string.	Input consists of a string s.	Output should be the first non-repeating character in the string, or None if all characters repeat.	1 <= len(s) <= 10^5.	[{"input": "swiss", "output": "w"}, {"input": "aabbcc", "output": "None"}]	[{"input": "abcd", "output": "a"}]	bd6e6a12-8d74-4f4f-97ce-160fe96b0754	2024-12-29 18:06:03.679251	Medium
Write a Python function to find the nth Fibonacci number using dynamic programming.	Input consists of a single integer n.	Output should be the nth Fibonacci number.	1 <= n <= 10^6.	[{"input": "5", "output": "5"}, {"input": "10", "output": "55"}]	[{"input": "1", "output": "1"}]	10af5922-e894-4c71-ad5b-fd44cc6c9efe	2024-12-29 18:06:03.68077	Medium
Write a Python function to convert a Roman numeral to an integer.	Input consists of a string s representing the Roman numeral.	Output should be the integer value of the Roman numeral.	1 <= len(s) <= 15.	[{"input": "III", "output": "3"}, {"input": "IX", "output": "9"}]	[{"input": "M", "output": "1000"}]	da6a9e0c-51f3-4adf-bf88-1437a6f20249	2024-12-29 18:06:03.682494	Medium
Write a Python function to find the sum of the digits of a given number.	Input consists of a single integer n.	Output should be the sum of the digits of n.	1 <= n <= 10^9.	[{"input": "12345", "output": "15"}, {"input": "9876", "output": "30"}]	[{"input": "0", "output": "0"}]	5ac05ef5-8ede-44d4-83ef-d46ee1adddc4	2024-12-29 18:06:03.684673	Medium
Write a Python function to check if a given string is a valid email address.	Input consists of a string s.	Output should be True if the string is a valid email address, otherwise False.	1 <= len(s) <= 100.	[{"input": "example@domain.com", "output": "True"}, {"input": "invalid-email.com", "output": "False"}]	[{"input": "user@sub.domain.com", "output": "True"}]	6cb6ffd5-6a03-4044-9d12-17a7579280e9	2024-12-29 18:06:03.686312	Medium
Write a Python function to find the second largest number in a list of integers.	Input consists of a list of integers.	Output should be the second largest number in the list.	2 <= len(arr) <= 10^5.	[{"input": "[1, 2, 3, 4, 5]", "output": "4"}, {"input": "[5, 5, 5, 5]", "output": "5"}]	[{"input": "[1, 2]", "output": "1"}]	262f44e1-a3da-46ef-8fad-5e9bf0b32934	2024-12-29 18:06:03.688066	Medium
Write a Python function to find the most frequent element in an array.	Input consists of an array of integers.	Output should be the most frequent element. If there is a tie, return the smallest element.	1 <= len(arr) <= 10^5.	[{"input": "[1, 2, 2, 3, 3, 3, 4]", "output": "3"}, {"input": "[1, 1, 2, 2, 2, 3]", "output": "2"}]	[{"input": "[1]", "output": "1"}]	8dbe15f7-bcd3-44ae-b1ef-8a5671074ee3	2024-12-29 18:06:03.690713	Medium
You are given a list of integers. Write a Python function to find the longest subarray with a sum divisible by a given number k. Return the length of the longest subarray.	The input consists of two lines: the first line contains space-separated integers representing the elements of the list. The second line contains a single integer k.	Return an integer representing the length of the longest subarray with a sum divisible by k.	1 <= length of the list <= 10^5, -10^9 <= elements of the list <= 10^9, 2 <= k <= 10^3	[{"input": "Input: [4, 5, 0, -2, -3, 1], 5\\n", "output": "Output: 4"}, {"input": "Input: [7, 2, 3, 10, 2], 3\\n", "output": "Output: 3"}]	[{"input": "Input: [1, 2, 3, 4, 5], 1\\n", "output": "Output: 5"}, {"input": "Input: [-1, -2, -3, -4, -5], 2\\n", "output": "Output: 0"}]	5c4ab26c-4c13-4f51-8a86-a2ead4c57b4f	2024-12-30 13:43:06.961861	hard
Write a Python function that takes a list of integers and returns the maximum product that can be obtained by multiplying any three integers from the list.	A list of integers.	An integer representing the maximum product.	The list will have at least 3 integers and at most 10^4 integers. Integers can be positive, negative, or zero.	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -5, 1, 2, 3]", "output": "150"}]	[{"input": "[0, 0, 0, 0]", "output": "0"}, {"input": "[-2, -1, 0, 1, 2]", "output": "4"}]	31205be7-c349-4ac0-9ef2-29fa5d72f49a	2024-12-30 13:48:34.844945	hard
Write a Python function that takes a list of integers as input and returns the maximum product of any three numbers in the list.	A list of integers.	An integer representing the maximum product of any three numbers in the list.	The input list will contain at least 3 integers.	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -5, 1, 2, 3]", "output": "150"}]	[{"input": "[0, 0, 0, 0]", "output": "0"}, {"input": "[-2, -1, 0, 1, 2]", "output": "4"}]	f3eec2c5-8189-493f-bdbd-0dc0b770ff63	2024-12-30 13:50:13.141448	hard
You are given a list of integers and you need to find the kth smallest element in the list. Write a Python function to efficiently find the kth smallest element.	The input consists of a list of integers and an integer k (1 <= k <= length of the list).	Return the kth smallest element as an integer.	1 <= length of the list <= 10^5	[{"input": "[3, 1, 4, 2, 5], 3", "output": "3"}, {"input": "[8, 5, 2, 9, 1, 7], 4", "output": "7"}]	[{"input": "[5], 1", "output": "5"}, {"input": "[2, 2, 2, 2], 1", "output": "2"}]	d2dfa086-c6d5-47dd-b384-3da09e7d4439	2024-12-30 14:13:50.318947	hard
Write a Python function that takes a list of integers as input and returns the sum of all prime numbers in the list.	A list of integers.	An integer representing the sum of prime numbers in the input list.	The input list can contain up to 10^5 integers.	[{"input": "[1, 2, 3, 4, 5]", "output": "10"}, {"input": "[10, 11, 12, 13, 14]", "output": "24"}]	[{"input": "[2, 3, 5, 7, 11]", "output": "28"}, {"input": "[4, 6, 8, 9, 10]", "output": "0"}]	e3d8d8e4-6529-4f08-a0ec-86660e887b6a	2025-01-04 13:07:35.462375	hard
You are given a list of integers. Write a Python function to find the maximum product of three numbers from the list.	A list of integers.	An integer representing the maximum product of three numbers.	The list contains at least 3 integers.	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -2, 0, 3, 5]", "output": "100"}]	[{"input": "[0, 0, 0, 0]", "output": "0"}, {"input": "[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]", "output": "125"}]	16f0df14-f961-44ad-815a-30b1fc3ee15a	2025-01-04 13:10:28.509027	hard
Write a Python function that takes a list of integers as input and returns the maximum sum that can be obtained by selecting a subsequence with no adjacent elements. For example, given the input list [2, 4, 6, 2, 5], the function should return 13, as the maximum sum can be achieved by selecting elements 2, 6, and 5.	A list of integers.	An integer representing the maximum sum achievable with the given constraints.	1 <= Length of the list <= 10^5, -10^4 <= List elements <= 10^4.	[{"input": "[2, 4, 6, 2, 5]", "output": "13"}, {"input": "[-1, 7, 8, -5, 4]", "output": "15"}]	[{"input": "[]", "output": "0"}, {"input": "[1]", "output": "1"}]	7906e4cc-a4d4-43f7-8acd-a1d3fa4e99f5	2025-01-04 13:12:53.893133	hard
Create a Python function that recursively calculates the factorial of a given number.	An integer n (0 <= n <= 10).	An integer representing the factorial of n.	The input number is non-negative and at most 10.	[{"input": "5", "output": "120"}, {"input": "0", "output": "1"}]	[{"input": "10", "output": "3628800"}, {"input": "1", "output": "1"}]	26e6e6a9-54b5-46d2-9d34-c4d83f855f6d	2025-01-05 16:25:03.727713	hard
Write a Python function that takes a string as input and returns the count of vowels and consonants in the string.	A string of alphabetic characters (case-insensitive).	A tuple containing the count of vowels and consonants.	The input string length is at most 10^4.	[{"input": "Hello World", "output": "(3, 7)"}, {"input": "Python Programming", "output": "(4, 14)"}]	[{"input": "AEIOU", "output": "(5, 0)"}, {"input": "BCDFGH", "output": "(0, 6)"}]	15562865-4484-480d-8acd-af1246501cb3	2025-01-05 16:25:03.737522	hard
Create a Python function that generates the Fibonacci sequence up to a specified limit.	An integer representing the limit of the Fibonacci sequence.	A list of Fibonacci numbers up to the limit.	The input limit is at most 100.	[{"input": "10", "output": "[0, 1, 1, 2, 3, 5, 8]"}, {"input": "5", "output": "[0, 1, 1, 2, 3]"}]	[{"input": "1", "output": "[0, 1, 1]"}, {"input": "2", "output": "[0, 1, 1, 2]"}]	fef1e427-9831-4da8-9ba1-9e4023554192	2025-01-05 16:25:03.745446	hard
Write a Python function that checks if a given string is a palindrome.	A string containing only alphabetic characters (case-insensitive).	A boolean value indicating if the string is a palindrome.	The input string length is at most 10^3.	[{"input": "radar", "output": "true"}, {"input": "Python", "output": "false"}]	[{"input": "Aibohphobia", "output": "true"}, {"input": "hello", "output": "false"}]	23aad631-0731-4350-8038-4c8fe76e3b9e	2025-01-05 16:25:03.752187	hard
Create a Python function that finds the maximum consecutive repeating character in a given string.	A string containing alphabetic characters.	A tuple containing the most repeated character and its count.	The input string length is at most 10^4.	[{"input": "aabbbccccddddd", "output": "('d', 4)"}, {"input": "abbbccdd", "output": "('b', 3)"}]	[{"input": "abc", "output": "('a', 1)"}, {"input": "aaaa", "output": "('a', 4)"}]	b355445d-8408-4062-819d-9544ba80ace3	2025-01-05 16:25:03.760337	hard
Write a Python function that calculates the power of a number using recursion.	Two integers: base and exponent.	An integer representing the result of base raised to the exponent.	The base and exponent are non-negative integers at most 10.	[{"input": "2, 3", "output": "8"}, {"input": "5, 2", "output": "25"}]	[{"input": "3, 0", "output": "1"}, {"input": "4, 1", "output": "4"}]	0744c9f3-4667-42f2-98dd-060729d7337a	2025-01-05 16:25:03.767333	hard
Create a Python function that calculates the square root of a number using the Babylonian method.	A non-negative integer.	A float representing the square root with an accuracy of 0.001.	The input number is at most 10^6.	[{"input": "16", "output": "4.0"}, {"input": "25", "output": "5.0"}]	[{"input": "1", "output": "1.0"}, {"input": "100", "output": "10.0"}]	68ae1dc4-bec6-4bcb-9d98-2dcaa5c8ff37	2025-01-05 16:25:03.774833	hard
Write a Python function that finds the longest common prefix among a list of strings.	A list of strings.	A string representing the longest common prefix.	The input list can contain up to 100 strings of length at most 100.	[{"input": "['flower', 'flow', 'flight']", "output": "'fl'"}, {"input": "['dog', 'racecar', 'car']", "output": "''"}]	[{"input": "['apple', 'ape', 'april']", "output": "'ap'"}, {"input": "['python', 'java', 'ruby']", "output": "''"}]	e3d099a3-d3b4-4d4b-8572-b1022a6bdf51	2025-01-05 16:25:03.78176	hard
Create a Python function that checks if a given number is a perfect square.	A non-negative integer.	A boolean value indicating if the number is a perfect square.	The input number is at most 10^9.	[{"input": "16", "output": "true"}, {"input": "14", "output": "false"}]	[{"input": "1", "output": "true"}, {"input": "10000", "output": "true"}]	5500000c-54ac-4e03-b384-0edabb687559	2025-01-05 16:25:03.789492	hard
Write a Python function that calculates the nth Fibonacci number using matrix exponentiation.	An integer n (0 <= n <= 100).	An integer representing the nth Fibonacci number.	The input number is non-negative and at most 100.	[{"input": "5", "output": "5"}, {"input": "10", "output": "55"}]	[{"input": "0", "output": "0"}, {"input": "1", "output": "1"}]	83e4171b-078d-446a-9f3f-c5317815a6d6	2025-01-05 16:25:03.796466	hard
Explain the difference between list and tuple in Python.	N/A	N/A	N/A	[{"input": "N/A", "output": "N/A"}]	[{"input": "N/A", "output": "N/A"}]	4644f05d-43f8-4c5c-aea9-556588106b04	2025-01-05 16:45:48.595652	medium
Write a Python function to check if a string is a palindrome.	A string input.	Return True if the string is a palindrome, False otherwise.	Assume the input string contains only alphabetic characters and no spaces.	[{"input": "'radar'", "output": "True"}, {"input": "'hello'", "output": "False"}]	[{"input": "'A man, a plan, a canal, Panama!'", "output": "True"}, {"input": "'race a car'", "output": "False"}]	703ec0f7-7db7-4e0a-b69d-752d82077902	2025-01-05 16:45:48.603409	medium
Explain the concept of list comprehension in Python with an example.	N/A	N/A	N/A	[{"input": "N/A", "output": "N/A"}]	[{"input": "N/A", "output": "N/A"}]	e6f9d296-c5e2-46ee-a226-e93e61d78be9	2025-01-05 16:45:48.61763	medium
Explain the difference between list and tuple data structures in Python.	N/A	N/A	N/A	[]	[]	2cf07d6d-4511-4966-adf3-7fcb1046e11e	2025-01-05 18:57:39.694084	medium
Explain the concept of a dictionary in Python and provide an example.	N/A	N/A	N/A	[]	[]	9f6ca0c0-d27c-4043-9561-df2e63ab1673	2025-01-05 18:57:39.727144	medium
Explain the concept of recursion in Python with an example.	N/A	N/A	N/A	[]	[]	7beced5d-437c-4ca6-9b43-8653cc15e4bd	2025-01-05 18:57:39.741784	medium
Explain the concept of a set in Python and provide an example.	N/A	N/A	N/A	[]	[]	785aaf51-af24-4a09-861f-ec06597b5b1c	2025-01-05 18:57:39.755637	medium
Explain the difference between 'deep copy' and 'shallow copy' in Python.	N/A	N/A	N/A	[{"input": "N/A", "output": "N/A"}, {"input": "N/A", "output": "N/A"}]	[{"input": "N/A", "output": "N/A"}, {"input": "N/A", "output": "N/A"}]	42a00c26-aff3-4269-a30e-1dd12118ae95	2025-01-09 14:45:34.494247	medium
Write a Python function that takes a list of integers as input and returns the sum of all even numbers in the list using a loop.	A list of integers.	An integer representing the sum of all even numbers in the input list.	The input list can contain up to 10^5 integers.	[{"input": "[1, 2, 3, 4, 5]", "output": "6"}, {"input": "[10, 20, 30, 40]", "output": "100"}]	[{"input": "[1, 3, 5, 7, 9]", "output": "0"}, {"input": "[2, 4, 6, 8, 10]", "output": "30"}]	90994d15-0688-4ada-b72d-bb0bc3c3b5b6	2025-01-09 15:13:34.144197	hard
Write a Python function that takes a list of integers as input and returns the sum of all prime numbers in the list. The function should also print the prime numbers found during the calculation.	A list of integers.	An integer representing the sum of prime numbers in the list.	The input list can contain up to 10^5 integers.	[{"input": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]", "output": "17 (Prime numbers: 2, 3, 5, 7)"}, {"input": "[11, 12, 13, 14, 15]", "output": "24 (Prime numbers: 11, 13)"}]	[{"input": "[4, 6, 8, 9, 10]", "output": "0 (No prime numbers)"}, {"input": "[2, 3, 5, 7, 11, 13]", "output": "41 (All numbers are prime)"}]	eb636258-a86b-4a44-8d03-f0a1de5333fd	2025-01-09 15:24:02.5723	hard
Write a Python function that takes a list of integers as input and returns the maximum product of three numbers from the list. The function should handle both positive and negative integers.	A list of integers.	An integer representing the maximum product of three numbers.	The length of the list will be at least 3 and at most 10^4. Integers in the list can range from -1000 to 1000.	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -5, 1, 2, 3]", "output": "150"}]	[{"input": "[0, 0, 0]", "output": "0"}, {"input": "[-2, -1, 0, 1, 2]", "output": "4"}]	29c2b86b-f78b-4fcd-90b7-a38624fcf3ec	2025-01-09 22:22:27.311938	hard
Design a Python class for a basic implementation of a priority queue using a binary heap. The class should include methods for inserting an element, extracting the minimum element, and checking if the queue is empty.	Not applicable.	Not applicable.	You can assume the elements are integers. The priority queue should be implemented using a binary heap.	[{"input": "Insert 5, Insert 3, Insert 7, Extract Min, Insert 2, Extract Min", "output": "3, 5"}, {"input": "Insert 10, Insert 1, Is Empty?", "output": "False"}]	[{"input": "Extract Min from an empty queue", "output": "Exception: Empty queue"}, {"input": "Insert 5, Insert 3, Insert 7, Extract Min, Insert 2, Extract Min, Extract Min", "output": "2, 3"}]	9f324173-e637-45c9-9a3b-2238eb5e9c95	2025-01-09 22:22:27.321516	hard
Write a Python function that takes a list of integers as input and returns the maximum product that can be obtained by multiplying any three integers from the list. The function should handle both positive and negative integers.	A list of integers.	An integer representing the maximum product of three integers.	The length of the input list will be at least 3 and at most 10^4. Integers in the list will range from -1000 to 1000.	[{"input": "[1, 2, 3, 4, 5]", "output": "60"}, {"input": "[-10, -5, 1, 2, 3]", "output": "150"}]	[{"input": "[0, 0, 0]", "output": "0"}, {"input": "[-2, -1, 0, 1, 2]", "output": "4"}]	90e315c7-1a80-4627-a71e-b4b3b64f9835	2025-01-09 23:07:45.077826	hard
Implement a Python function that takes a string as input and returns the length of the longest substring without repeating characters. For example, given the input 'abcabcbb', the function should return 3 ('abc' is the longest substring without repeating characters).	A string containing only ASCII characters.	An integer representing the length of the longest substring without repeating characters.	The length of the input string will be at most 10^5.	[{"input": "'abcabcbb'", "output": "3"}, {"input": "'bbbbb'", "output": "1"}]	[{"input": "'pwwkew'", "output": "3"}, {"input": "' '", "output": "1"}]	d2427635-ee76-4a09-bfd8-f4b9f8f910b9	2025-01-09 23:07:45.088121	hard
What is the output of the following Python code snippet?	N/A	Single integer	N/A	[{"input": "N/A", "output": "5"}, {"input": "N/A", "output": "8"}]	[{"input": "N/A", "output": "0"}, {"input": "N/A", "output": "12"}]	29bdf4d6-3a0b-4a4c-a98a-b287af6c4638	2025-01-10 16:42:09.498905	medium
Explain the difference between list comprehension and generator expression in Python.	N/A	Text explanation	N/A	[{"input": "N/A", "output": "List comprehension creates a list of results, while a generator expression generates results lazily."}, {"input": "N/A", "output": "List comprehension uses square brackets [], while generator expression uses parentheses ()."}]	[{"input": "N/A", "output": "List comprehension is more memory-intensive compared to generator expression."}, {"input": "N/A", "output": "Generator expressions are more efficient for large datasets due to lazy evaluation."}]	dee6ff54-0148-492e-8cac-e33d0542a0bc	2025-01-10 16:42:09.51173	medium
\.


--
-- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alembic_version
    ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


--
-- Name: contact contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact
    ADD CONSTRAINT contact_pkey PRIMARY KEY (id);


--
-- Name: feedback feedback_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback
    ADD CONSTRAINT feedback_pkey PRIMARY KEY (id);


--
-- Name: multiple_choice_question multiple_choice_question_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.multiple_choice_question
    ADD CONSTRAINT multiple_choice_question_pkey PRIMARY KEY (id);


--
-- Name: problem_solving_questions problem_solving_questions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.problem_solving_questions
    ADD CONSTRAINT problem_solving_questions_pkey PRIMARY KEY (id);


--
-- PostgreSQL database dump complete
--
